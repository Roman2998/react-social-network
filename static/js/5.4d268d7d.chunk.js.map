{"version":3,"sources":["components/common/FormControls/FormControls.jsx","utils/validators/validators.js","components/common/FormControls/FormControls.module.css","hoc/withAuthRedirect.jsx","Redux/Dialogs/dialogs-selectors.js","components/Messages/Message/Message.module.css","components/Messages/Messages.module.css","components/Messages/Message/Message.jsx","components/Messages/Messages.jsx","components/Messages/MessagesContainer.jsx"],"names":["FormControl","props","hasError","meta","error","touched","errorClass","classes","errorMessage","active","className","container","children","Textarea","input","placeholder","Input","type","attr","required","value","maxLengthCreator","maxLength","length","composeValidators","validators","reduce","validator","undefined","module","exports","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","to","React","connect","getDialogsPage","dialogsPage","Message","factor","message","mine","right","left","maxLength300","AddMessageFormRedux","reduxForm","form","handleSubmit","inputs","onSubmit","Field","component","name","textarea","validate","Button","add","Messages","sendMessageTC","messagesElements","messages","map","el","id","title","messageList","values","messageBody","mapDispatchToProps","compose"],"mappings":"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","file":"static/js/5.4d268d7d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport classes from \"./FormControls.module.css\";\r\n\r\nconst FormControl = props => {\r\n\tconst hasError = props.meta.error && props.meta.touched;\r\n\tconst errorClass = hasError ? classes.error : \"\";\r\n\tconst errorMessage = hasError && props.meta.active ?\r\n\t\t<small className={classes.errorMessage}>{props.meta.error}</small> : \"\";\r\n\r\n\treturn (\r\n\t\t<div className={`${classes.container} ${props.className} ${errorClass}`}>\r\n\t\t\t{props.children}\r\n\t\t\t{errorMessage}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport const Textarea = props =>\r\n\t<FormControl {...props}>\r\n\t\t<textarea {...props.input} className={classes.input} placeholder={props.placeholder}/>\r\n\t</FormControl>\r\n\r\nexport const Input = props => {\r\n\tconst type = props.type || props.input.type || \"text\";\r\n\tconst placeholder = props.placeholder || props.input.placeholder || \"\";\r\n\r\n\treturn <FormControl {...props}>\r\n\t\t<input {...props.input} className={`${classes.input} ${props.className}`} {...props.attr}\r\n\t\t\t   placeholder={placeholder} type={type}/>\r\n\t</FormControl>;\r\n}\r\n","export const required = value => {\r\n\tif (value) return undefined;\r\n\r\n\treturn \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = maxLength => value => {\r\n\tif (value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n\r\n\treturn undefined;\r\n}\r\n\r\nexport const composeValidators = (...validators) => value =>\r\n\tvalidators.reduce((error, validator) => error || validator(value), undefined);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FormControls_container__ryctp\",\"input\":\"FormControls_input__3y0ZE\",\"error\":\"FormControls_error___xvwj\",\"errorMessage\":\"FormControls_errorMessage__1RHf2\"};","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to=\"/login\" />;\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","export const getDialogsPage = state => state.dialogsPage\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1795U\",\"left\":\"Message_left__d8_b-\",\"right\":\"Message_right__27C_Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Messages_title__3jxR2\",\"messages\":\"Messages_messages__14yg4\",\"messageList\":\"Messages_messageList__isl7F\",\"inputs\":\"Messages_inputs__3zKEK\",\"textarea\":\"Messages_textarea__aXCmu\",\"add\":\"Messages_add__CJlED\"};","import React from \"react\";\r\nimport classes from \"./Message.module.css\";\r\n\r\nconst Message = ({message, mine}) => {\r\n    const styleMsg = factor => factor ? classes.right : classes.left;\r\n\r\n    return (\r\n        <div className={`${classes.message} ${styleMsg(mine)}`}>{message}</div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport Message from \"./Message/Message\";\r\nimport classes from './Messages.module.css';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport { Input } from '../common/FormControls/FormControls'\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport Button from \"../common/Button/Button\";\r\n\r\nconst maxLength300 = maxLengthCreator(300);\r\n\r\nconst Messages = ({sendMessageTC, dialogsPage}) => {\r\n\tconst {messages} = dialogsPage;\r\n\r\n\tconst messagesElements = messages.map(el => <Message id={el.id} mine={el.mine} key={el.id} message={el.message}/>);\r\n\r\n\tconst addNewMessage = values => {\r\n\t\tsendMessageTC(values.messageBody);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={`${classes.messages} component--wrap`}>\r\n\t\t\t<h3 className={classes.title}>Messages</h3>\r\n\t\t\t<div className={classes.messageList}>{messagesElements}</div>\r\n\t\t\t<AddMessageFormRedux onSubmit={addNewMessage}/>\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nconst AddMessageForm = ({handleSubmit}) => {\r\n\treturn (\r\n\t\t<form className={classes.inputs} onSubmit={handleSubmit}>\r\n\t\t\t<Field component={Input} name={\"messageBody\"} placeholder={`Type your message...`}\r\n\t\t\t\t   className={classes.textarea} validate={[required, maxLength300]}/>\r\n\t\t\t<Button className={classes.add}>Send</Button>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm);\r\n\r\nexport default Messages;\r\n","import {sendMessageTC} from \"../../Redux/Dialogs/dialogs-reducer\";\r\nimport Messages from \"./Messages\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport { getDialogsPage } from '../../Redux/Dialogs/dialogs-selectors'\r\n\r\nconst mapStateToProps = (state) => ({dialogsPage: getDialogsPage(state)});\r\n\r\nconst mapDispatchToProps = {sendMessageTC};\r\n\r\nexport default compose(\r\n\tconnect(mapStateToProps, mapDispatchToProps),\r\n\twithAuthRedirect\r\n)(Messages);\r\n"],"sourceRoot":""}