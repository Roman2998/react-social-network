{"version":3,"sources":["components/common/FormControls/FormControls.jsx","utils/validators/validators.js","components/common/FormControls/FormControls.module.css","hoc/withAuthRedirect.jsx","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileMainInfo/ProfileMainInfo.module.css","components/Profile/ProfileInfo/ProfileMainInfo/ProfileAvatar/ProfileAvatar.module.css","components/Profile/ProfileInfo/ProfileDataForm/ProfileDataForm.module.css","components/Profile/Profile.module.css","components/Profile/MyPosts/Posts.module.css","components/Profile/ProfileInfo/ProfileMainInfo/ProfileStatus/ProfileStatus.jsx","Redux/Profile/profile-selectors.js","components/Profile/ProfileInfo/ProfileMainInfo/ProfileStatus/ProfileStatusContainer.jsx","components/Profile/ProfileInfo/ProfileMainInfo/ProfileAvatar/ProfileAvatar.jsx","components/Profile/ProfileInfo/ProfileMainInfo/ProfileMainInfo.jsx","components/Profile/ProfileInfo/ProfileAbout/ProfileAbout.jsx","components/Profile/ProfileInfo/ProfileJob/ProfileJob.jsx","components/Profile/ProfileInfo/ProfileContacts/ProfileContacts.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/ProfileInfo/ProfileDataForm/ProfileDataForm.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/Posts.jsx","components/Profile/MyPosts/PostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["FormControl","props","hasError","meta","error","touched","errorClass","classes","errorMessage","active","className","container","children","Textarea","input","placeholder","Input","type","attr","required","value","maxLengthCreator","maxLength","length","composeValidators","validators","reduce","validator","undefined","module","exports","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","to","React","connect","ProfileStatusForm","initialValues","onSubmit","deactivateEditMode","handleSubmit","submit","e","component","name","ProfileStatus","isOwner","match","params","userId","useState","editMode","setEditMode","status","updateStatus","onDoubleClick","getProfilePageState","profilePage","getProfileState","profile","getProfileFetching","isFetching","getProfileStatus","mapDispatchToProps","compose","withRouter","ProfileAvatar","profileImage","photos","fullName","large","src","alt","small","imgName","substr","toUpperCase","profileImageWrap","SelectPhotoButton","savePhoto","selectMsg","selectImgBtn","button","onChange","target","files","ProfileMainInfo","profileMainInfo","profileAvatar","profileNameWrap","profileStatus","profileName","ProfileStatusContainer","profileId","ProfileAbout","aboutMe","profileInfoBlock","ProfileJob","lookingForAJob","lookingForAJobDescription","ProfileContacts","contacts","contactsListJSX","link","push","href","ProfileInfo","profileUser","ProfileDataForm","form","validate","lookingForAJobCheckbox","htmlFor","id","Object","keys","map","key","contactItem","contactItemTitle","Button","Post","message","likesCount","post","likes","maxLength300","Posts","memo","addPostTC","postsElements","posts","el","AddPostFormRedux","values","newPost","reduxForm","inputWrap","Field","textarea","addPostBtn","PostsContainer","Profile","formData","updateProfile","then","buttonEditMode","Preloader","refreshProfile","authorizedUserId","getProfile","getStatus","history","a","getAuthorizedId","getIsAuth","toggleIsFetching","useEffect","response","flag"],"mappings":"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","file":"static/js/4.31af42a4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport classes from \"./FormControls.module.css\";\r\n\r\nconst FormControl = props => {\r\n\tconst hasError = props.meta.error && props.meta.touched;\r\n\tconst errorClass = hasError ? classes.error : \"\";\r\n\tconst errorMessage = hasError && props.meta.active ?\r\n\t\t<small className={classes.errorMessage}>{props.meta.error}</small> : \"\";\r\n\r\n\treturn (\r\n\t\t<div className={`${classes.container} ${props.className} ${errorClass}`}>\r\n\t\t\t{props.children}\r\n\t\t\t{errorMessage}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport const Textarea = props =>\r\n\t<FormControl {...props}>\r\n\t\t<textarea {...props.input} className={classes.input} placeholder={props.placeholder}/>\r\n\t</FormControl>\r\n\r\nexport const Input = props => {\r\n\tconst type = props.type || props.input.type || \"text\";\r\n\tconst placeholder = props.placeholder || props.input.placeholder || \"\";\r\n\r\n\treturn <FormControl {...props}>\r\n\t\t<input {...props.input} className={`${classes.input} ${props.className}`} {...props.attr}\r\n\t\t\t   placeholder={placeholder} type={type}/>\r\n\t</FormControl>;\r\n}\r\n","export const required = value => {\r\n\tif (value) return undefined;\r\n\r\n\treturn \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = maxLength => value => {\r\n\tif (value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n\r\n\treturn undefined;\r\n}\r\n\r\nexport const composeValidators = (...validators) => value =>\r\n\tvalidators.reduce((error, validator) => error || validator(value), undefined);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FormControls_container__ryctp\",\"input\":\"FormControls_input__3y0ZE\",\"error\":\"FormControls_error___xvwj\",\"errorMessage\":\"FormControls_errorMessage__1RHf2\"};","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to=\"/login\" />;\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileUser\":\"ProfileInfo_profileUser__Utabe\",\"profileInfoBlock\":\"ProfileInfo_profileInfoBlock__JY7jC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__2eQ0e\",\"likes\":\"Post_likes__QwPe3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileMainInfo\":\"ProfileMainInfo_profileMainInfo__3W7uM\",\"profileAvatar\":\"ProfileMainInfo_profileAvatar__17WOn\",\"profileStatus\":\"ProfileMainInfo_profileStatus__3Qr6x\",\"profileId\":\"ProfileMainInfo_profileId__3sxi4\",\"profileName\":\"ProfileMainInfo_profileName__1o5ia\",\"profileDesc\":\"ProfileMainInfo_profileDesc__1DU5V\",\"selectImgBtn\":\"ProfileMainInfo_selectImgBtn__23sL-\",\"button\":\"ProfileMainInfo_button__1cQJc\",\"profileNameWrap\":\"ProfileMainInfo_profileNameWrap__b-HPy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileImageWrap\":\"ProfileAvatar_profileImageWrap__YHurW\",\"profileImage\":\"ProfileAvatar_profileImage__4BIyT\",\"imgName\":\"ProfileAvatar_imgName__2Ilv-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ProfileDataForm_form__dSwIv\",\"contactItem\":\"ProfileDataForm_contactItem__1sUUM\",\"contactItemTitle\":\"ProfileDataForm_contactItemTitle__2TLCV\",\"lookingForAJob\":\"ProfileDataForm_lookingForAJob__1KQYn\",\"lookingForAJobCheckbox\":\"ProfileDataForm_lookingForAJobCheckbox__18SLh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonEditMode\":\"Profile_buttonEditMode__3ax1I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputWrap\":\"Posts_inputWrap__2IdK2\",\"textarea\":\"Posts_textarea__2leIl\",\"addPostBtn\":\"Posts_addPostBtn__1nYww\"};","import React, {useState} from \"react\";\r\nimport {Form, Field} from \"react-final-form\";\r\nimport {Input} from \"../../../../common/FormControls/FormControls\";\r\n\r\nconst ProfileStatusForm = props => {\r\n\treturn (\r\n\t\t<Form initialValues={props.initialValues} onSubmit={props.deactivateEditMode}>\r\n\t\t\t{({handleSubmit}) => {\r\n\t\t\t\tconst submit = handleSubmit;\r\n\t\t\t\tconst attr = {\r\n\t\t\t\t\t\"autoFocus\": true,\r\n\t\t\t\t\t\"onBlur\": e => submit(e)\r\n\t\t\t\t};\r\n\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t\t\t<Field component={Input} name={\"status\"} attr={attr}\r\n\t\t\t\t\t\t\t   type=\"text\"/>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t)\r\n\t\t\t}}\r\n\t\t</Form>\r\n\t);\r\n};\r\n\r\nconst ProfileStatus = props => {\r\n\r\n\tconst isOwner = !props.match.params.userId;\r\n\r\n\tconst [editMode, setEditMode] = useState(false);\r\n\r\n\tconst activateEditMode = () => {\r\n\t\tif (isOwner) {\r\n\t\t\tsetEditMode(true);\r\n\t\t}\r\n\t}\r\n\r\n\tconst deactivateEditMode = (status) => {\r\n\t\tsetEditMode(false);\r\n\t\tprops.updateStatus(status.status);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{!editMode\r\n\t\t\t\t? isOwner\r\n\t\t\t\t\t? <div>\r\n\t\t\t\t\t\t<span onDoubleClick={activateEditMode}>{props.status}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t: <div>\r\n\t\t\t\t\t\t<span>{props.status}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t: <ProfileStatusForm initialValues={{\"status\": props.status}}\r\n\t\t\t\t\t\t\t\t\t deactivateEditMode={deactivateEditMode}/>}\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nexport default ProfileStatus;\r\n","export const getProfilePageState = state => state.profilePage\r\nexport const getProfileState = state => state.profilePage.profile\r\nexport const getProfileFetching = state => state.profilePage.isFetching\r\nexport const getProfileStatus = state => state.profilePage.status\r\n","import {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {updateStatus} from \"../../../../../Redux/Profile/profile-reducer\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport { getProfileStatus } from '../../../../../Redux/Profile/profile-selectors'\r\n\r\nconst mapStateToProps = state => ({\r\n\tstatus: getProfileStatus(state),\r\n})\r\n\r\nconst mapDispatchToProps = {updateStatus}\r\n\r\nexport default compose(\r\n\tconnect(mapStateToProps, mapDispatchToProps),\r\n\twithRouter\r\n)(ProfileStatus);\r\n","import classes from \"./ProfileAvatar.module.css\";\r\nimport React from \"react\";\r\n\r\nconst ProfileAvatar = ({photos, fullName}) => {\r\n\tlet profileImage;\r\n\tif (photos.large) {\r\n\t\tprofileImage = <img className={classes.profileImage} src={photos.large} alt=\"avatar\"/>;\r\n\t} else {\r\n\t\tprofileImage = photos.small\r\n\t\t\t? <img className={classes.profileImage} src={photos.small} alt=\"avatar\"/>\r\n\t\t\t: <span className={classes.imgName}>{fullName.substr(0, 1).toUpperCase()}</span>;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={classes.profileImageWrap}>\r\n\t\t\t{profileImage}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ProfileAvatar;\r\n","import React from \"react\";\r\nimport classes from \"./ProfileMainInfo.module.css\";\r\nimport ProfileStatusContainer from \"./ProfileStatus/ProfileStatusContainer\";\r\nimport ProfileAvatar from \"./ProfileAvatar/ProfileAvatar\";\r\n\r\nconst SelectPhotoButton = ({isOwner, savePhoto}) => {\r\n\tlet selectMsg = \"Select your image\";\r\n\r\n\tconst onSelectMainPhoto = e => {\r\n\t\tconst photos = e.target.files;\r\n\t\tif (photos.length) {\r\n\t\t\tsavePhoto(photos[0]);\r\n\t\t\tselectMsg = photos[0];\r\n\t\t}\r\n\t}\r\n\r\n\tif (isOwner) {\r\n\t\treturn <label className={classes.selectImgBtn}>\r\n\t\t\t<span className={classes.button}>{selectMsg}</span>\r\n\t\t\t<input type={\"file\"} onChange={onSelectMainPhoto}/>\r\n\t\t</label>\r\n\t} else {\r\n\t\treturn \"\"\r\n\t}\r\n}\r\n\r\nconst ProfileMainInfo = ({photos, fullName, userId, isOwner, ...props}) => {\r\n\r\n\treturn (\r\n\t\t<div className={classes.profileMainInfo}>\r\n\r\n\t\t\t<div className={classes.profileAvatar}>\r\n\t\t\t\t<ProfileAvatar photos={photos} fullName={fullName}/>\r\n\t\t\t\t<SelectPhotoButton isOwner={isOwner} savePhoto={props.savePhoto}/>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className={classes.profileNameWrap}>\r\n\t\t\t\t<div className={classes.profileStatus}>\r\n\t\t\t\t\t<div className={classes.profileName}>{fullName}</div>\r\n\t\t\t\t\t<ProfileStatusContainer/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className={classes.profileId}>{userId}</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nexport default ProfileMainInfo;\r\n","import React from \"react\";\r\nimport classes from \"../ProfileInfo.module.css\";\r\n\r\nconst ProfileAbout = ({aboutMe, ...props}) => {\r\n\tif (!aboutMe) {\r\n\t\treturn \"\";\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={classes.profileInfoBlock}>\r\n\t\t\t<h2>About me</h2>\r\n\t\t\t<p>{aboutMe}</p>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ProfileAbout;\r\n","import React from \"react\";\r\nimport classes from \"../ProfileInfo.module.css\";\r\n\r\nconst ProfileJob = ({lookingForAJob, lookingForAJobDescription, ...props}) => {\r\n\r\n\treturn (\r\n\t\t<div className={classes.profileInfoBlock}>\r\n\t\t\t<h2>Search for a job</h2>\r\n\t\t\t<p>\r\n\t\t\t\t<strong>{lookingForAJob ? \"Looking for a job.\" : \"Not looking for a job.\"}</strong>\r\n\t\t\t\t{lookingForAJobDescription}\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nexport default ProfileJob;\r\n","import React from \"react\";\r\nimport classes from \"../ProfileInfo.module.css\";\r\n\r\nconst ProfileContacts = ({contacts, ...props}) => {\r\n\tconst contactsListJSX = [];\r\n\r\n\tfor (let link in contacts) {\r\n\t\tif (contacts[link]) {\r\n\t\t\tcontactsListJSX.push(<a href={`${contacts[link]}`}>{link}</a>)\r\n\t\t}\r\n\t}\r\n\r\n\tif (contactsListJSX.length > 0) {\r\n\t\treturn (\r\n\t\t\t<div className={classes.profileInfoBlock}>\r\n\t\t\t\t<h2>Contacts</h2>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{contactsListJSX}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t} else return \"\";\r\n}\r\n\r\nexport default ProfileContacts;\r\n","import React from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\nimport ProfileMainInfo from './ProfileMainInfo/ProfileMainInfo'\r\nimport ProfileAbout from './ProfileAbout/ProfileAbout'\r\nimport ProfileJob from './ProfileJob/ProfileJob'\r\nimport ProfileContacts from './ProfileContacts/ProfileContacts'\r\n\r\nconst ProfileInfo = ({isOwner, profile, ...props}) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className={classes.profileUser}>\r\n\t\t\t\t<ProfileMainInfo fullName={profile.fullName} photos={profile.photos}\r\n\t\t\t\t\t\t\t\t userId={profile.userId} isOwner={isOwner} savePhoto={props.savePhoto}/>\r\n\t\t\t\t<ProfileAbout aboutMe={profile.aboutMe}/>\r\n\t\t\t\t<ProfileJob lookingForAJob={profile.lookingForAJob}\r\n\t\t\t\t\t\t\tlookingForAJobDescription={profile.lookingForAJobDescription}/>\r\n\t\t\t\t<ProfileContacts contacts={profile.contacts}/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ProfileInfo;","// import React from \"react\";\r\n// import {Formik, Form, Field} from \"formik\";\r\n//\r\n// const ProfileDataForm = ({profile, updateProfile, setEditMode}) => {\r\n// \treturn (\r\n// \t\t<div>\r\n// \t\t\t<Formik\r\n// \t\t\t\tinitialValues={{\r\n// \t\t\t\t\tfullName: profile.fullName,\r\n// \t\t\t\t\taboutMe: profile.aboutMe,\r\n// \t\t\t\t\tlookingForAJob: profile.lookingForAJob,\r\n// \t\t\t\t\tlookingForAJobDescription: profile.lookingForAJobDescription,\r\n// \t\t\t\t\tcontacts: {\r\n// \t\t\t\t\t\tfacebook: profile.contacts.facebook,\r\n// \t\t\t\t\t\twebsite: profile.contacts.website,\r\n// \t\t\t\t\t\t// vk: profile.contacts.vk,\r\n// \t\t\t\t\t\t// twitter: profile.contacts.twitter,\r\n// \t\t\t\t\t\t// instagram: profile.contacts.instagram,\r\n// \t\t\t\t\t\t// youtube: profile.contacts.youtube,\r\n// \t\t\t\t\t\t// github: profile.contacts.github,\r\n// \t\t\t\t\t\t// mainLink: profile.contacts.mainLink\r\n// \t\t\t\t\t}\r\n// \t\t\t\t}}\r\n// \t\t\t\tonSubmit={(values, {setSubmitting}) => {\r\n// \t\t\t\t\tsetTimeout( () => {\r\n// \t\t\t\t\t\tupdateProfile(values).then( () => {\r\n// \t\t\t\t\t\t\tsetEditMode(false);\r\n// \t\t\t\t\t\t});\r\n// \t\t\t\t\t\tsetSubmitting(false);\r\n// \t\t\t\t\t}, 400);\r\n//\r\n// \t\t\t\t}}\r\n// \t\t\t>\r\n// \t\t\t\t{({isSubmitting}) => (\r\n// \t\t\t\t\t<Form>\r\n// \t\t\t\t\t\t<div>\r\n// \t\t\t\t\t\t\t<b>ФИО:</b><Field id=\"fullName\" name=\"fullName\"/>\r\n// \t\t\t\t\t\t</div>\r\n// \t\t\t\t\t\t<div>\r\n// \t\t\t\t\t\t\t<b>Обо мне:</b><Field id=\"aboutMe\" name=\"aboutMe\"/>\r\n// \t\t\t\t\t\t</div>\r\n// \t\t\t\t\t\t<div>\r\n// \t\t\t\t\t\t\t<b>Ищу работу:</b><Field type=\"checkbox\" id=\"lookingForAJob\" name=\"lookingForAJob\"/>\r\n// \t\t\t\t\t\t</div>\r\n// \t\t\t\t\t\t<div>\r\n// \t\t\t\t\t\t\t<b>Мои профессиональные навыки:</b><Field id=\"lookingForAJobDescription\"\r\n// \t\t\t\t\t\t\t                                          name=\"lookingForAJobDescription\"/>\r\n// \t\t\t\t\t\t</div>\r\n// \t\t\t\t\t\t<div>\r\n// \t\t\t\t\t\t\t<b>facebook:</b><Field id=\"facebook\" name=\"contacts.facebook\"/>\r\n// \t\t\t\t\t\t</div>\r\n// \t\t\t\t\t\t<div>\r\n// \t\t\t\t\t\t\t<b>website:</b><Field id=\"website\" name=\"contacts.website\"/>\r\n// \t\t\t\t\t\t</div>\r\n// \t\t\t\t\t\t<div>\r\n// \t\t\t\t\t\t\t<b>vk:</b><Field id=\"vk\" name=\"contacts.vk\"/>\r\n// \t\t\t\t\t\t</div>\r\n// \t\t\t\t\t\t<div>\r\n// \t\t\t\t\t\t\t<b>twitter:</b><Field id=\"twitter\" name=\"contacts.twitter\"/>\r\n// \t\t\t\t\t\t</div>\r\n// \t\t\t\t\t\t<div>\r\n// \t\t\t\t\t\t\t<b>instagram:</b><Field id=\"instagram\" name=\"contacts.instagram\"/>\r\n// \t\t\t\t\t\t</div>\r\n// \t\t\t\t\t\t<div>\r\n// \t\t\t\t\t\t\t<b>youtube:</b><Field id=\"youtube\" name=\"contacts.youtube\"/>\r\n// \t\t\t\t\t\t</div>\r\n// \t\t\t\t\t\t<div>\r\n// \t\t\t\t\t\t\t<b>github:</b><Field id=\"github\" name=\"contacts.github\"/>\r\n// \t\t\t\t\t\t</div>\r\n// \t\t\t\t\t\t<div>\r\n// \t\t\t\t\t\t\t<b>mainLink:</b><Field id=\"mainLink\" name=\"contacts.mainLink\"/>\r\n// \t\t\t\t\t\t</div>\r\n// \t\t\t\t\t\t<div>\r\n// \t\t\t\t\t\t\t<button type=\"submit\" disabled={isSubmitting}>Save</button>\r\n// \t\t\t\t\t\t</div>\r\n// \t\t\t\t\t</Form>\r\n// \t\t\t\t)}\r\n// \t\t\t</Formik>\r\n// \t\t</div>\r\n// \t)\r\n// }\r\n// export default ProfileDataForm;\r\n\r\nimport React from \"react\";\r\nimport {Form, Field} from \"react-final-form\";\r\nimport {Input, Textarea} from \"../../../common/FormControls/FormControls\";\r\nimport {required, composeValidators} from \"../../../../utils/validators/validators\";\r\nimport Button from \"../../../common/Button/Button\";\r\nimport classes from \"./ProfileDataForm.module.css\";\r\n\r\nconst ProfileDataForm = props =>\r\n\t<Form onSubmit={props.onSubmit} initialValues={props.initialValues} profile={props.profile}>\r\n\t\t{({handleSubmit, profile, error}) => (\r\n\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t<div className={classes.form}>\r\n\t\t\t\t\t<label>\r\n\t\t\t\t\t\t<h2>FullName</h2>\r\n\t\t\t\t\t\t<Field placeholder={\"FullName\"} name={\"fullName\"}\r\n\t\t\t\t\t\t\t   validate={composeValidators(required)} component={Input} type={\"text\"}/>\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<label>\r\n\t\t\t\t\t\t<h2>About Me</h2>\r\n\t\t\t\t\t\t<Field placeholder={\"About me\"} name={\"aboutMe\"} component={Textarea}/>\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className={classes.lookingForAJob}>\r\n\t\t\t\t\t\t\t<label className={classes.lookingForAJobCheckbox}>\r\n\t\t\t\t\t\t\t\t<h2>Looking for a job?</h2>\r\n\t\t\t\t\t\t\t\t<Field name={\"lookingForAJob\"} component={Input} type={\"checkbox\"}/>\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t<label htmlFor={\"lookingForAJobDescription\"}>\r\n\t\t\t\t\t\t\t\t<h2>Description for a looking job</h2>\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<Field placeholder={\"Description for a looking job\"} name={\"lookingForAJobDescription\"}\r\n\t\t\t\t\t\t\t   component={Textarea} id={\"lookingForAJobDescription\"}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<h2>Contacts</h2>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t{Object.keys(profile.contacts).map(key => {\r\n\t\t\t\t\t\t\t\treturn <label className={classes.contactItem} key={key}>\r\n\t\t\t\t\t\t\t\t\t<strong className={classes.contactItemTitle}>{key}</strong>\r\n\t\t\t\t\t\t\t\t\t<Field name={`contacts.${key}`} component={Input} type={\"text\"}\r\n\t\t\t\t\t\t\t\t\t\t   placeholder={`https://${key}/`}/>\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t{error\r\n\t\t\t\t\t? <div>{error}</div>\r\n\t\t\t\t\t: \"\"\r\n\t\t\t\t}\r\n\t\t\t\t<Button>Save changes</Button>\r\n\t\t\t</form>\r\n\t\t)}\r\n\r\n\t</Form>\r\n\r\nexport default ProfileDataForm;\r\n","import React from 'react';\r\nimport s from './Post.module.css';\r\nimport classes from './Post.module.css';\r\n// const Post = (props) => {\r\n// \treturn (\r\n// \t\t<div className={s.posts}>\r\n// \t\t\t<div className={s.item}>\r\n// \t\t\t\t<img alt=\"logo\" src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQelPOoLWOuBnaeaw_KtxdrmTR3mPgDKHrawQ&usqp=CAU' />\r\n// \t\t\t\t{props.message}\r\n// \t\t\t\t<div>\r\n// \t\t\t\t\t<span>like</span> {props.likesCount}\r\n// \t\t\t\t</div>\r\n// \t\t\t</div>\r\n// \t\t</div>\r\n// \t)\r\n// }\r\nconst Post = ({message, likesCount}) => {\r\n\treturn (\r\n\t\t<div className={classes.post}>\r\n\t\t\t<p>{message}</p>\r\n\t\t\t<div className={classes.likes}>\r\n\t\t\t\t<small>Like</small>\r\n\t\t\t\t<small>{likesCount}</small>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default Post;","// import React from 'react';\r\n// import s from './Posts.module.css';\r\n// import Post from './Post/Post';\r\n// import {Form, Formik, Field, ErrorMessage} from \"formik\";\r\n//\r\n// const Posts = (props) => {\r\n//     let postsElements =\r\n//         [...props.posts]\r\n//             .reverse()\r\n//             .map(p => <Post key={p.id} message={p.message} likesCount={p.likesCount}/>)\r\n//\r\n//\r\n//     return <div className={s.postsBlock}>\r\n//         <h3>My posts</h3>\r\n//         <div>\r\n//             <AddNewPostForm addPost={props.addPost}/>\r\n//         </div>\r\n//         <div className={s.posts}>\r\n//             {postsElements}\r\n//         </div>\r\n//     </div>\r\n// }\r\n//\r\n//\r\n// const AddNewPostForm = (props) => {\r\n//     return (\r\n//         <div>\r\n//             <Formik\r\n//                 initialValues={{newPostText: ''}}\r\n//                 validate={values => {\r\n//                     const errors = {}\r\n//                     const textLength = 50;\r\n//                     if (!values.newPostText.length) {\r\n//                         errors.newPostText = 'Your post is too short';\r\n//                     } else if (values.newPostText.length > textLength) {\r\n//                         errors.newPostText = `Your post is more than ${textLength} characters`;\r\n//                     }\r\n//                     return errors;\r\n//                 }}\r\n//                 onSubmit={(values, {setSubmitting}) => {\r\n//                     setTimeout(() => {\r\n//                         props.addPost(values.newPostText);\r\n//                         values.newPostText = '';\r\n//                         setSubmitting(false);\r\n//                     }, 400);\r\n//\r\n//                 }}\r\n//             >\r\n//                 {({isSubmitting}) => (\r\n//                     <Form>\r\n//                         <div>\r\n//                             <Field name='newPostText' component='textarea'\r\n//                                    placeholder='Enter your post message'\r\n//                             />\r\n//                             <ErrorMessage name=\"newPostText\" component='div'/>\r\n//                         </div>\r\n//                         <div>\r\n//                             <button type=\"submit\" disabled={isSubmitting}>\r\n//                                 Submit\r\n//                             </button>\r\n//                         </div>\r\n//                     </Form>\r\n//                 )}\r\n//             </Formik>\r\n//\r\n//         </div>\r\n//\r\n//     )\r\n// }\r\n//\r\n// export default Posts;\r\n\r\nimport React from \"react\";\r\nimport Post from \"./Post/Post\";\r\n\r\nimport classes from './Posts.module.css';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormControls/FormControls\";\r\nimport Button from \"../../common/Button/Button\";\r\n\r\nconst maxLength300 = maxLengthCreator(300);\r\n\r\nconst Posts = React.memo(props => {\r\n    let {addPostTC, profilePage} = props;\r\n\r\n    const {posts} = profilePage;\r\n\r\n    const postsElements = posts.map(el => (\r\n        <Post message={el.post} key={el.id} likesCount={el.likesCount}/>\r\n    ));\r\n\r\n    const addNewPost = values => {\r\n        addPostTC(values.newPost);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>My posts</h2>\r\n            <AddPostFormRedux onSubmit={addNewPost}/>\r\n            <div>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nconst AddPostForm = props => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={classes.inputWrap}>\r\n            <Field component={Textarea} name={\"newPost\"} placeholder={`Type your post...`}\r\n                   className={classes.textarea} validate={[required, maxLength300]}/>\r\n            <Button className={classes.addPostBtn}>Add post</Button>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst AddPostFormRedux = reduxForm({form: \"postForm\"})(AddPostForm);\r\n\r\nexport default Posts;\r\n","import {addPostTC} from \"../../../Redux/Profile/profile-reducer\";\r\nimport Posts from \"./Posts\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfilePageState} from \"../../../Redux/Profile/profile-selectors\";\r\n\r\nconst mapStateToProps = state => ({\r\n    profilePage: getProfilePageState(state)\r\n})\r\n\r\nconst mapDispatchToProps = {addPostTC};\r\n\r\nconst PostsContainer = connect(mapStateToProps, mapDispatchToProps)(Posts);\r\n\r\nexport default PostsContainer;\r\n","import React, { useState } from 'react'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo'\r\nimport Preloader from '../common/Preloader/Preloader'\r\nimport ProfileDataForm from './ProfileInfo/ProfileDataForm/ProfileDataForm'\r\nimport Button from '../common/Button/Button'\r\nimport classes from './Profile.module.css'\r\nimport PostsContainer from './MyPosts/PostsContainer'\r\n\r\nconst Profile = ({ isOwner, profile, ...props }) => {\r\n\tconst [editMode, setEditMode] = useState(false)\r\n\r\n\tconst activateEditMode = () => {\r\n\t\tif (isOwner) setEditMode(true)\r\n\t}\r\n\r\n\tconst deActivateMode = formData => {\r\n\t\tprops.updateProfile(formData)\r\n\t\t\t.then(() => setEditMode(false))\r\n\t}\r\n\r\n\tif (!profile) return <Preloader/>\r\n\r\n\treturn (\r\n\t\t<div className={`component--wrap`}>\r\n\t\t\t{!editMode\r\n\t\t\t\t? <ProfileInfo isOwner={isOwner} profile={profile} savePhoto={props.savePhoto}\r\n\t\t\t\t\t\t\t   updateProfile={props.updateProfile}/>\r\n\t\t\t\t: <ProfileDataForm onSubmit={deActivateMode} profile={profile} initialValues={profile}/>}\r\n\t\t\t{!editMode && isOwner\r\n\t\t\t\t? <Button className={classes.buttonEditMode} attr={{ 'onClick': activateEditMode }}>Edit\r\n\t\t\t\t\tprofile</Button>\r\n\t\t\t\t: ''}\r\n\t\t\t<PostsContainer/>\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default Profile","import React, { useEffect } from 'react'\r\nimport Profile from './Profile'\r\nimport { connect } from 'react-redux'\r\nimport { getStatus, getProfile, savePhoto, toggleIsFetching, updateProfile } from '../../Redux/Profile/profile-reducer'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { compose } from 'redux'\r\nimport Preloader from '../common/Preloader/Preloader'\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect'\r\nimport { getProfileFetching, getProfileState } from '../../Redux/Profile/profile-selectors'\r\nimport { getAuthorizedId, getIsAuth } from '../../Redux/Auth/auth-selectors'\r\n\r\nconst refreshProfile = async (id, authorizedUserId, getProfile, getStatus, history) => {\r\n\tlet userId = id\r\n\tif (!userId) {\r\n\t\tuserId = authorizedUserId\r\n\t\tif (!userId) {\r\n\t\t\thistory.push('/login')\r\n\t\t}\r\n\t}\r\n\r\n\tawait getProfile(userId)\r\n\tgetStatus(userId)\r\n\r\n}\r\n\r\nconst ProfileContainer = props => {\r\n\tconst { match, authorizedUserId, getProfile, getStatus } = props\r\n\r\n\tuseEffect(() => {\r\n\t\tprops.toggleIsFetching(true)\r\n\t\trefreshProfile(match.params.userId, authorizedUserId, getProfile, getStatus, props.history)\r\n\t\t\t.then(response => props.toggleIsFetching(false))\r\n\t}, [match.params.userId])\r\n\r\n\tif (props.isFetching) return <Preloader flag={props.isFetching}/>\r\n\r\n\treturn <Profile isOwner={!match.params.userId} {...props}/>\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n\tprofile: getProfileState(state),\r\n\t//status: state.profilePage.status,\r\n\tisFetching: getProfileFetching(state),\r\n\tauthorizedUserId: getAuthorizedId(state),\r\n\tisAuth: getIsAuth(state)\r\n})\r\n\r\nexport default compose(\r\n\tconnect(mapStateToProps, { getProfile, updateProfile, getStatus, savePhoto, toggleIsFetching }),\r\n\twithRouter,\r\n\twithAuthRedirect\r\n)(ProfileContainer)"],"sourceRoot":""}