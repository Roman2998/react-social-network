{"version":3,"sources":["components/common/FormControls/FormControls.jsx","utils/validators/validators.js","components/common/FormControls/FormControls.module.css","components/Login/Login.module.css","components/Login/Login.jsx"],"names":["FormControl","props","hasError","meta","error","touched","errorClass","classes","errorMessage","active","className","container","children","Textarea","input","placeholder","Input","type","attr","required","value","maxLengthCreator","maxLength","length","composeValidators","validators","reduce","validator","undefined","module","exports","LoginFormRedux","reduxForm","form","handleSubmit","captchaUrl","onSubmit","field","name","validate","component","rememberMe","captcha","alt","src","mapDispatchToProps","login","connect","state","isAuth","getIsAuth","getAuthCaptcha","to","formTitle","formData","email","password"],"mappings":"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","file":"static/js/6.e133a932.chunk.js","sourcesContent":["import React from \"react\";\r\nimport classes from \"./FormControls.module.css\";\r\n\r\nconst FormControl = props => {\r\n\tconst hasError = props.meta.error && props.meta.touched;\r\n\tconst errorClass = hasError ? classes.error : \"\";\r\n\tconst errorMessage = hasError && props.meta.active ?\r\n\t\t<small className={classes.errorMessage}>{props.meta.error}</small> : \"\";\r\n\r\n\treturn (\r\n\t\t<div className={`${classes.container} ${props.className} ${errorClass}`}>\r\n\t\t\t{props.children}\r\n\t\t\t{errorMessage}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport const Textarea = props =>\r\n\t<FormControl {...props}>\r\n\t\t<textarea {...props.input} className={classes.input} placeholder={props.placeholder}/>\r\n\t</FormControl>\r\n\r\nexport const Input = props => {\r\n\tconst type = props.type || props.input.type || \"text\";\r\n\tconst placeholder = props.placeholder || props.input.placeholder || \"\";\r\n\r\n\treturn <FormControl {...props}>\r\n\t\t<input {...props.input} className={`${classes.input} ${props.className}`} {...props.attr}\r\n\t\t\t   placeholder={placeholder} type={type}/>\r\n\t</FormControl>;\r\n}\r\n","export const required = value => {\r\n\tif (value) return undefined;\r\n\r\n\treturn \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = maxLength => value => {\r\n\tif (value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n\r\n\treturn undefined;\r\n}\r\n\r\nexport const composeValidators = (...validators) => value =>\r\n\tvalidators.reduce((error, validator) => error || validator(value), undefined);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FormControls_container__ryctp\",\"input\":\"FormControls_input__3y0ZE\",\"error\":\"FormControls_error___xvwj\",\"errorMessage\":\"FormControls_errorMessage__1RHf2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formTitle\":\"Login_formTitle__3HQ4l\",\"form\":\"Login_form__gWHoO\",\"field\":\"Login_field__TEtRW\",\"error\":\"Login_error__DEyr7\",\"captcha\":\"Login_captcha__aQM5T\",\"rememberMe\":\"Login_rememberMe__2nKM-\"};","import React from \"react\";\r\nimport {Input} from \"../common/FormControls/FormControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../Redux/Auth/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport classes from \"./Login.module.css\";\r\nimport Button from '../common/Button/Button';\r\nimport {reduxForm, Field} from \"redux-form\";\r\nimport {getAuthCaptcha, getIsAuth} from \"../../Redux/Auth/auth-selectors\";\r\n\r\nconst LoginForm = ({handleSubmit, captchaUrl, error}) =>\r\n    <form className={classes.form} onSubmit={handleSubmit}>\r\n        <div className={classes.field}>\r\n            <Field placeholder={\"Email\"} name={\"email\"}\r\n                   validate={[required]} component={Input}/>\r\n        </div>\r\n        <div className={classes.field}>\r\n            <Field type=\"password\" placeholder={\"Password\"} name={\"password\"}\r\n                   validate={[required]}\r\n                   component={Input}/>\r\n        </div>\r\n        <label className={classes.rememberMe}>\r\n            <Field component={Input} name={\"rememberMe\"} type={\"checkbox\"}/>\r\n            <p>Remember Me</p>\r\n        </label>\r\n        {captchaUrl\r\n            ? <div className={classes.captcha}>\r\n                <img alt={'captcha'} src={captchaUrl}/>\r\n                <Field component={Input} placeholder={\"Input symbols from the image\"} name={\"captcha\"}/>\r\n            </div>\r\n            : \"\"}\r\n        {error\r\n            ? <div className={classes.error}>{error}</div>\r\n            : \"\"\r\n        }\r\n        <div>\r\n            <Button>Login</Button>\r\n        </div>\r\n    </form>\r\n\r\nconst LoginFormRedux = reduxForm({form: \"login\"})(LoginForm);\r\n\r\nconst Login = ({login, isAuth, captchaUrl}) => {\r\n    const submitData = formData => {\r\n        const {email, password, rememberMe, captcha} = formData;\r\n        login(email, password, rememberMe, captcha);\r\n    }\r\n\r\n    if (isAuth) {\r\n        return <Redirect to={\"/profile\"}/>;\r\n    }\r\n\r\n    return (\r\n        <div className={`component--wrap`}>\r\n            <h2 className={classes.formTitle}>Sign in</h2>\r\n            <LoginFormRedux onSubmit={submitData} captchaUrl={captchaUrl}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuth: getIsAuth(state),\r\n    captchaUrl: getAuthCaptcha(state)\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    login\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n"],"sourceRoot":""}